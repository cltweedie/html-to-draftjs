{"version":3,"sources":["webpack://htmlToDraftjs/webpack/universalModuleDefinition","webpack://htmlToDraftjs/webpack/bootstrap","webpack://htmlToDraftjs/external \"immutable\"","webpack://htmlToDraftjs/external \"draft-js\"","webpack://htmlToDraftjs/./src/library/getSafeBodyFromHTML.js","webpack://htmlToDraftjs/./src/library/chunkBuilder.js","webpack://htmlToDraftjs/./src/library/getBlockTypeForTag.js","webpack://htmlToDraftjs/./src/library/processInlineTag.js","webpack://htmlToDraftjs/./src/library/getBlockData.js","webpack://htmlToDraftjs/./src/library/getEntityId.js","webpack://htmlToDraftjs/./src/library/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getSafeBodyFromHTML","html","doc","document","implementation","createHTMLDocument","documentElement","innerHTML","getElementsByTagName","getWhitespaceChunk","entityId","text","inlines","OrderedSet","entities","blocks","createTextChunk","node","inlineStyle","textContent","trim","chunk","Array","length","fill","getSoftNewlineChunk","getEmptyChunk","getFirstBlockChunk","blockType","data","type","depth","Map","getBlockDividerChunk","Math","max","min","getAtomicBlockChunk","joinChunks","A","B","concat","blockRenderMap","element","wrapper","blockquote","code","atomic","unstyled","aliasedElements","inlineTags","del","em","strong","ins","sub","sup","getBlockData","style","textAlign","marginLeft","getEntityId","undefined","HTMLAnchorElement","entityConfig","dataset","mention","url","href","Entity","__create","getAttribute","title","targetOption","target","SPACE","REGEX_NBSP","RegExp","firstBlock","genFragment","lastList","inEntity","customChunkGenerator","nodeName","toLowerCase","mutability","HTMLImageElement","src","alt","height","width","float","alignment","HTMLVideoElement","HTMLIFrameElement","tag","matchedTypes","filter","draftBlock","indexOf","keySeq","toSet","toArray","getBlockTypeForTag","currentStyle","styleToCheck","add","toOrderedSet","HTMLElement","htmlElement","withMutations","color","backgroundColor","fontSize","fontFamily","replace","fontWeight","textDecoration","fontStyle","processInlineTag","child","firstChild","generatedChunk","nextSibling","htmlToDraft","chunkData","sanitizedHtml","safeBody","getChunkForHTML","entityMap","OrderedMap","forEach","entity","set","__get","start","contentBlocks","split","map","textBlock","ii","end","slice","characterList","List","index","CharacterMetadata","ContentBlock","genKey"],"mappings":"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","file":"html-to-draftjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"immutable\"), require(\"draft-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"immutable\", \"draft-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"htmlToDraftjs\"] = factory(require(\"immutable\"), require(\"draft-js\"));\n\telse\n\t\troot[\"htmlToDraftjs\"] = factory(root[\"immutable\"], root[\"draft-js\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","const getSafeBodyFromHTML = (html) => {\n  var doc;\n  var root = null;\n  if (document.implementation &&\n      document.implementation.createHTMLDocument) {\n      doc = document.implementation.createHTMLDocument('foo');\n      doc.documentElement.innerHTML = html;\n      root = doc.getElementsByTagName('body')[0];\n  }\n  return root;\n};\nexport default getSafeBodyFromHTML;\n","import { OrderedSet, Map } from 'immutable';\nconst SPACE = ' ';\nconst MAX_DEPTH = 4;\nexport const getWhitespaceChunk = (entityId) => {\n    return {\n        text: SPACE,\n        inlines: [new OrderedSet()],\n        entities: [entityId],\n        blocks: [],\n    };\n};\nexport const createTextChunk = (node, inlineStyle, entityId) => {\n    const text = node.textContent;\n    if (text.trim() === '') {\n        return { chunk: getWhitespaceChunk(entityId) };\n    }\n    return {\n        chunk: {\n            text,\n            inlines: Array(text.length).fill(inlineStyle),\n            entities: Array(text.length).fill(entityId),\n            blocks: [],\n        },\n    };\n};\nexport const getSoftNewlineChunk = () => {\n    return {\n        text: '\\n',\n        inlines: [new OrderedSet()],\n        entities: new Array(1),\n        blocks: [],\n    };\n};\nexport const getEmptyChunk = () => {\n    return {\n        text: '',\n        inlines: [],\n        entities: [],\n        blocks: [],\n    };\n};\nexport const getFirstBlockChunk = (blockType, data) => {\n    return {\n        text: '',\n        inlines: [],\n        entities: [],\n        blocks: [{\n                type: blockType,\n                depth: 0,\n                data: data || new Map({}),\n            }],\n    };\n};\nexport const getBlockDividerChunk = (blockType, depth, data) => {\n    return {\n        text: '\\r',\n        inlines: [],\n        entities: [],\n        blocks: [{\n                type: blockType,\n                depth: Math.max(0, Math.min(MAX_DEPTH, depth)),\n                data: data || new Map({}),\n            }],\n    };\n};\nexport const getAtomicBlockChunk = (entityId, textContent = null) => {\n    const text = `${textContent}\\r` ? textContent : '\\r ';\n    return {\n        text,\n        inlines: [new OrderedSet()],\n        entities: [entityId],\n        blocks: [{\n                type: 'atomic',\n                depth: 0,\n                data: new Map({})\n            }],\n    };\n};\nexport const joinChunks = (A, B) => {\n    return {\n        text: A.text + B.text,\n        inlines: A.inlines.concat(B.inlines),\n        entities: A.entities.concat(B.entities),\n        blocks: A.blocks.concat(B.blocks),\n    };\n};\n","import { Map } from 'immutable';\nconst blockRenderMap = new Map({\n    'header-one': {\n        element: 'h1',\n    },\n    'header-two': {\n        element: 'h2',\n    },\n    'header-three': {\n        element: 'h3',\n    },\n    'header-four': {\n        element: 'h4',\n    },\n    'header-five': {\n        element: 'h5',\n    },\n    'header-six': {\n        element: 'h6',\n    },\n    'unordered-list-item': {\n        element: 'li',\n        wrapper: 'ul',\n    },\n    'ordered-list-item': {\n        element: 'li',\n        wrapper: 'ol',\n    },\n    blockquote: {\n        element: 'blockquote',\n    },\n    code: {\n        element: 'pre',\n    },\n    atomic: {\n        element: 'figure',\n    },\n    unstyled: {\n        element: 'p',\n        aliasedElements: ['div']\n    },\n});\nexport default function getBlockTypeForTag(tag, lastList) {\n    const matchedTypes = blockRenderMap\n        .filter(draftBlock => {\n        return ((draftBlock.element === tag &&\n            (!draftBlock.wrapper || draftBlock.wrapper === lastList)) ||\n            draftBlock.wrapper === tag ||\n            (draftBlock.aliasedElements && draftBlock.aliasedElements.indexOf(tag) > -1));\n    })\n        .keySeq()\n        .toSet()\n        .toArray();\n    if (matchedTypes.length === 1) {\n        return matchedTypes[0];\n    }\n    return undefined;\n}\n","const inlineTags = {\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  strong: 'BOLD',\n  ins: 'UNDERLINE',\n  sub: 'SUBSCRIPT',\n  sup: 'SUPERSCRIPT',\n};\nexport default function processInlineTag(tag, node, currentStyle) {\n  const styleToCheck = inlineTags[tag];\n  let inlineStyle;\n  if (styleToCheck) {\n      inlineStyle = currentStyle.add(styleToCheck).toOrderedSet();\n  }\n  else if (node instanceof HTMLElement) {\n      inlineStyle = currentStyle;\n      const htmlElement = node;\n      inlineStyle = inlineStyle.withMutations((style) => {\n          const color = htmlElement.style.color;\n          const backgroundColor = htmlElement.style.backgroundColor;\n          const fontSize = htmlElement.style.fontSize;\n          const fontFamily = htmlElement.style.fontFamily.replace(/^\"|\"$/g, '');\n          const fontWeight = htmlElement.style.fontWeight;\n          const textDecoration = htmlElement.style.textDecoration;\n          const fontStyle = htmlElement.style.fontStyle;\n          if (color) {\n              style.add(`color-${color.replace(/ /g, '')}`);\n          }\n          if (backgroundColor) {\n              style.add(`bgcolor-${backgroundColor.replace(/ /g, '')}`);\n          }\n          if (fontSize) {\n              style.add(`fontsize-${fontSize.replace(/px$/g, '')}`);\n          }\n          if (fontFamily) {\n              style.add(`fontfamily-${fontFamily}`);\n          }\n          if (fontWeight === 'bold') {\n              style.add(inlineTags.strong);\n          }\n          if (textDecoration === 'underline') {\n              style.add(inlineTags.ins);\n          }\n          if (fontStyle === 'italic') {\n              style.add(inlineTags.em);\n          }\n      }).toOrderedSet();\n  }\n  return inlineStyle;\n}\n","import { Map } from 'immutable';\nexport default function getBlockData(node) {\n    if (node.style.textAlign) {\n        return new Map({\n            'text-align': node.style.textAlign,\n        });\n    }\n    else if (node.style.marginLeft) {\n        return new Map({\n            'margin-left': node.style.marginLeft,\n        });\n    }\n    return undefined;\n}\n","import { Entity } from 'draft-js';\nconst getEntityId = (node) => {\n    let entityId = undefined;\n    if (node instanceof HTMLAnchorElement) {\n        const entityConfig = {};\n        if (node.dataset && node.dataset.mention !== undefined) {\n            entityConfig.url = node.href;\n            entityConfig.text = node.innerHTML;\n            entityConfig.value = node.dataset.value;\n            entityId = Entity.__create('MENTION', 'IMMUTABLE', entityConfig);\n        }\n        else {\n            entityConfig.url = node.getAttribute ? node.getAttribute('href') || node.href : node.href;\n            entityConfig.title = node.innerHTML;\n            entityConfig.targetOption = node.target;\n            entityId = Entity.__create('LINK', 'MUTABLE', entityConfig);\n        }\n    }\n    return entityId;\n};\nexport default getEntityId;\n","/* @flow */\nimport { CharacterMetadata, ContentBlock, genKey, Entity } from 'draft-js';\nimport { Map, List, OrderedMap, OrderedSet } from 'immutable';\nimport getSafeBodyFromHTML from './getSafeBodyFromHTML';\nimport { createTextChunk, getSoftNewlineChunk, getEmptyChunk, getBlockDividerChunk, getFirstBlockChunk, getAtomicBlockChunk, joinChunks, } from './chunkBuilder';\nimport getBlockTypeForTag from './getBlockTypeForTag';\nimport processInlineTag from './processInlineTag';\nimport getBlockData from './getBlockData';\nimport getEntityId from './getEntityId';\nconst SPACE = ' ';\nconst REGEX_NBSP = new RegExp('&nbsp;', 'g');\nlet firstBlock = true;\nfunction genFragment(node, inlineStyle, depth, lastList, inEntity, customChunkGenerator) {\n    const nodeName = node.nodeName.toLowerCase();\n    if (customChunkGenerator) {\n        const value = customChunkGenerator(nodeName, node);\n        if (value) {\n            const entityId = Entity.__create(value.type, value.mutability, value.data || {});\n            return { chunk: getAtomicBlockChunk(entityId, value.textContent) };\n        }\n    }\n    if (nodeName === '#text' && node.textContent !== '\\n') {\n        return createTextChunk(node, inlineStyle, inEntity);\n    }\n    if (nodeName === 'br') {\n        return { chunk: getSoftNewlineChunk() };\n    }\n    if (nodeName === 'img' &&\n        node instanceof HTMLImageElement) {\n        const entityConfig = {};\n        entityConfig.src = node.getAttribute ? node.getAttribute('src') || node.src : node.src;\n        entityConfig.alt = node.alt;\n        entityConfig.height = node.style.height;\n        entityConfig.width = node.style.width;\n        if (node.style.float) {\n            entityConfig.alignment = node.style.float;\n        }\n        const entityId = Entity.__create('IMAGE', 'MUTABLE', entityConfig);\n        return { chunk: getAtomicBlockChunk(entityId) };\n    }\n    if (nodeName === 'video' &&\n        node instanceof HTMLVideoElement) {\n        const entityConfig = {};\n        entityConfig.src = node.getAttribute ? node.getAttribute('src') || node.src : node.src;\n        entityConfig.alt = node.alt;\n        entityConfig.height = node.style.height;\n        entityConfig.width = node.style.width;\n        if (node.style.float) {\n            entityConfig.alignment = node.style.float;\n        }\n        const entityId = Entity.__create('VIDEO', 'MUTABLE', entityConfig);\n        return { chunk: getAtomicBlockChunk(entityId) };\n    }\n    if (nodeName === 'iframe' &&\n        node instanceof HTMLIFrameElement) {\n        const entityConfig = {};\n        entityConfig.src = node.getAttribute ? node.getAttribute('src') || node.src : node.src;\n        entityConfig.height = node.height;\n        entityConfig.width = node.width;\n        const entityId = Entity.__create('EMBEDDED_LINK', 'MUTABLE', entityConfig);\n        return { chunk: getAtomicBlockChunk(entityId) };\n    }\n    const blockType = getBlockTypeForTag(nodeName, lastList);\n    let chunk;\n    if (blockType) {\n        if (nodeName === 'ul' || nodeName === 'ol') {\n            lastList = nodeName;\n            depth += 1;\n        }\n        else {\n            if (blockType !== 'unordered-list-item' &&\n                blockType !== 'ordered-list-item') {\n                lastList = '';\n                depth = -1;\n            }\n            if (!firstBlock) {\n                chunk = getBlockDividerChunk(blockType, depth, getBlockData(node));\n            }\n            else {\n                chunk = getFirstBlockChunk(blockType, getBlockData(node));\n                firstBlock = false;\n            }\n        }\n    }\n    if (!chunk) {\n        chunk = getEmptyChunk();\n    }\n    inlineStyle = processInlineTag(nodeName, node, inlineStyle);\n    let child = node.firstChild;\n    while (child) {\n        const entityId = getEntityId(child);\n        const { chunk: generatedChunk } = genFragment(child, inlineStyle, depth, lastList, (entityId || inEntity), customChunkGenerator);\n        chunk = joinChunks(chunk, generatedChunk);\n        const sibling = child.nextSibling;\n        child = sibling;\n    }\n    return { chunk };\n}\nfunction getChunkForHTML(html, customChunkGenerator) {\n    const sanitizedHtml = html.trim().replace(REGEX_NBSP, SPACE);\n    const safeBody = getSafeBodyFromHTML(sanitizedHtml);\n    if (!safeBody) {\n        return null;\n    }\n    firstBlock = true;\n    const { chunk } = genFragment(safeBody, new OrderedSet(), -1, '', undefined, customChunkGenerator);\n    return { chunk };\n}\nexport default function htmlToDraft(html, customChunkGenerator) {\n    const chunkData = getChunkForHTML(html, customChunkGenerator);\n    if (chunkData) {\n        const { chunk } = chunkData;\n        let entityMap = new OrderedMap({});\n        chunk.entities && chunk.entities.forEach(entity => {\n            if (entity) {\n                entityMap = entityMap.set(entity, Entity.__get(entity));\n            }\n        });\n        let start = 0;\n        return {\n            contentBlocks: chunk.text.split('\\r')\n                .map((textBlock, ii) => {\n                const end = start + textBlock.length;\n                const inlines = chunk && chunk.inlines.slice(start, end);\n                const entities = chunk && chunk.entities.slice(start, end);\n                const characterList = new List(inlines.map((style, index) => {\n                    const data = { style, entity: null };\n                    if (entities[index]) {\n                        data.entity = entities[index];\n                    }\n                    return CharacterMetadata.create(data);\n                }));\n                start = end;\n                return new ContentBlock({\n                    key: genKey(),\n                    type: (chunk && chunk.blocks[ii] && chunk.blocks[ii].type) || 'unstyled',\n                    depth: chunk && chunk.blocks[ii] && chunk.blocks[ii].depth,\n                    data: (chunk && chunk.blocks[ii] && chunk.blocks[ii].data) || new Map({}),\n                    text: textBlock,\n                    characterList,\n                });\n            }),\n            entityMap,\n        };\n    }\n    return null;\n}\n"],"sourceRoot":""}